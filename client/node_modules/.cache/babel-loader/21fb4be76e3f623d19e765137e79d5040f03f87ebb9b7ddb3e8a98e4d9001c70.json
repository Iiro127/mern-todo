{"ast":null,"code":"var _jsxFileName = \"/Users/iiro/mern-todo/client/src/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        console.log('Fetching tasks...'); // Log when the fetch starts\n        const response = await axios.get('http://localhost:5001/api/tasks/todos');\n        setTasks(response.data);\n        response.data.forEach(task => {\n          if (new Date(task.endDate) < new Date()) {\n            setNotifications(prev => [...prev, `Task \"${task.name}\" is overdue! woah`]);\n          }\n        });\n      } catch (error) {\n        console.error('Failed to fetch tasks:', error);\n        setNotifications(prev => [...prev, \"Failed to fetch tasks.\"]);\n      }\n    };\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to the Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"latest-tasks\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Latest Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [task.name, \" - Due: \", new Date(task.endDate).toLocaleDateString()]\n        }, task._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tasks available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"Sut0JtGFnYalhJRcmWB4QNjKY2Y=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Home","_s","tasks","setTasks","notifications","setNotifications","fetchTasks","console","log","response","get","data","forEach","task","Date","endDate","prev","name","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","toLocaleDateString","_id","_c","$RefreshReg$"],"sources":["/Users/iiro/mern-todo/client/src/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Home() {\n    const [tasks, setTasks] = useState([]);\n    const [notifications, setNotifications] = useState([]);\n\n    useEffect(() => {\n        const fetchTasks = async () => {\n            try {\n                console.log('Fetching tasks...');  // Log when the fetch starts\n                const response = await axios.get('http://localhost:5001/api/tasks/todos');\n                setTasks(response.data);\n                response.data.forEach(task => {\n                    if (new Date(task.endDate) < new Date()) {\n                        setNotifications(prev => [...prev, `Task \"${task.name}\" is overdue! woah`]);\n                    }\n                });\n            } catch (error) {\n                console.error('Failed to fetch tasks:', error);\n                setNotifications(prev => [...prev, \"Failed to fetch tasks.\"]);\n            }\n        };\n        fetchTasks();\n    }, []);\n\n    return (\n        <div className=\"container mt-5\">\n            <h2>Welcome to the Home Page</h2>\n            <div className=\"notifications\">\n                <h3>Notifications</h3>\n                \n            </div>\n            <div className=\"latest-tasks\">\n                <h3>Latest Tasks</h3>\n                {tasks.length > 0 ? (\n                    <ul>\n                        {tasks.map(task => (\n                            <li key={task._id}>{task.name} - Due: {new Date(task.endDate).toLocaleDateString()}</li>\n                        ))}\n                    </ul>\n                ) : (\n                    <p>No tasks available.</p>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}