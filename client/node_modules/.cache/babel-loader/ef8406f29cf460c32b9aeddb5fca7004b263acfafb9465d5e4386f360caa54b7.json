{"ast":null,"code":"var _jsxFileName = \"/Users/iiro/mern-todo/client/src/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        console.log('Fetching tasks...'); // Log when the fetch starts\n        const response = await axios.get('http://localhost:5001/api/tasks/todos');\n        setTasks(response.data);\n\n        // For some reason the notifications were printed twice. Had to add a functionality to remove duplicates.\n\n        const newNotifications = response.data.reduce((acc, task) => {\n          if (new Date(task.endDate) < new Date()) {\n            const message = `Task \"${task.name}\" is overdue!`;\n            if (!acc.includes(message)) {\n              acc.push(message);\n            }\n          }\n          return acc;\n        }, []);\n        setNotifications(prev => [...new Set([...prev, ...newNotifications])]);\n      } catch (error) {\n        console.error('Failed to fetch tasks:', error);\n        setNotifications(prev => [...new Set([...prev, \"Failed to fetch tasks.\"])]);\n      }\n    };\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to the Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), notifications.length > 0 ? notifications.map((notification, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: notification\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No notifications.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"latest-tasks\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Latest Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [task.name, \" - Due: \", new Date(task.endDate).toLocaleDateString()]\n        }, task._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"Sut0JtGFnYalhJRcmWB4QNjKY2Y=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Home","_s","tasks","setTasks","notifications","setNotifications","fetchTasks","console","log","response","get","data","newNotifications","reduce","acc","task","Date","endDate","message","name","includes","push","prev","Set","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","notification","index","toLocaleDateString","_id","_c","$RefreshReg$"],"sources":["/Users/iiro/mern-todo/client/src/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Home() {\n    const [tasks, setTasks] = useState([]);\n    const [notifications, setNotifications] = useState([]);\n\n    useEffect(() => {\n        const fetchTasks = async () => {\n            try {\n                console.log('Fetching tasks...');  // Log when the fetch starts\n                const response = await axios.get('http://localhost:5001/api/tasks/todos');\n                setTasks(response.data);\n\n                // For some reason the notifications were printed twice. Had to add a functionality to remove duplicates.\n\n                const newNotifications = response.data.reduce((acc, task) => {\n                    if (new Date(task.endDate) < new Date()) {\n                        const message = `Task \"${task.name}\" is overdue!`;\n                        if (!acc.includes(message)) {\n                            acc.push(message);\n                        }\n                    }\n                    return acc;\n                }, []);\n\n                setNotifications(prev => [...new Set([...prev, ...newNotifications])]);\n            } catch (error) {\n                console.error('Failed to fetch tasks:', error);\n                setNotifications(prev => [...new Set([...prev, \"Failed to fetch tasks.\"])]);\n            }\n        };\n        fetchTasks();\n    }, []);\n\n    return (\n        <div className=\"container mt-5\">\n            <h2>Welcome to the Home Page</h2>\n            <div className=\"notifications\">\n                <h3>Notifications</h3>\n                {notifications.length > 0 ? (\n                    notifications.map((notification, index) => (\n                        <p key={index}>{notification}</p>\n                    ))\n                ) : (\n                    <p>No notifications.</p>\n                )}\n            </div>\n            <div className=\"latest-tasks\">\n                <h3>Latest Tasks</h3>\n                <ul>\n                    {tasks.map(task => (\n                        <li key={task._id}>{task.name} - Due: {new Date(task.endDate).toLocaleDateString()}</li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}